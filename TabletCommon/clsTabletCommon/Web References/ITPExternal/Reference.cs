//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.586
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.586.
// 
#pragma warning disable 1591

namespace clsTabletCommon.ITPExternal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wbsITP_ExternalSoap", Namespace="http://scms.silcar.com.au/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class wbsITP_External : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CookieLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubcontractorITPsForDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetITPDownloadInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetITPStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetITPFullQuestionnaireInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetITPFullITPTypeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetITPFullDocumentSectionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetITPStaticTableVersionNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetITPProjectQuestionnaireInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetITPProjectSection10InfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetITPUploadInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wbsITP_External() {
            this.Url = "http://silcar-ws11.silcar.com.au:8003/wbsITP_External.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CookieLoginCompletedEventHandler CookieLoginCompleted;
        
        /// <remarks/>
        public event GetSubcontractorITPsForDownloadCompletedEventHandler GetSubcontractorITPsForDownloadCompleted;
        
        /// <remarks/>
        public event GetITPDownloadInfoCompletedEventHandler GetITPDownloadInfoCompleted;
        
        /// <remarks/>
        public event SetITPStatusCompletedEventHandler SetITPStatusCompleted;
        
        /// <remarks/>
        public event GetITPFullQuestionnaireInfoCompletedEventHandler GetITPFullQuestionnaireInfoCompleted;
        
        /// <remarks/>
        public event GetITPFullITPTypeInfoCompletedEventHandler GetITPFullITPTypeInfoCompleted;
        
        /// <remarks/>
        public event GetITPFullDocumentSectionInfoCompletedEventHandler GetITPFullDocumentSectionInfoCompleted;
        
        /// <remarks/>
        public event GetITPStaticTableVersionNumberCompletedEventHandler GetITPStaticTableVersionNumberCompleted;
        
        /// <remarks/>
        public event GetITPProjectQuestionnaireInfoCompletedEventHandler GetITPProjectQuestionnaireInfoCompleted;
        
        /// <remarks/>
        public event GetITPProjectSection10InfoCompletedEventHandler GetITPProjectSection10InfoCompleted;
        
        /// <remarks/>
        public event SetITPUploadInfoCompletedEventHandler SetITPUploadInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/CookieLogin", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CookieLogin(string sUsername, string sPassword) {
            object[] results = this.Invoke("CookieLogin", new object[] {
                        sUsername,
                        sPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CookieLoginAsync(string sUsername, string sPassword) {
            this.CookieLoginAsync(sUsername, sPassword, null);
        }
        
        /// <remarks/>
        public void CookieLoginAsync(string sUsername, string sPassword, object userState) {
            if ((this.CookieLoginOperationCompleted == null)) {
                this.CookieLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCookieLoginOperationCompleted);
            }
            this.InvokeAsync("CookieLogin", new object[] {
                        sUsername,
                        sPassword}, this.CookieLoginOperationCompleted, userState);
        }
        
        private void OnCookieLoginOperationCompleted(object arg) {
            if ((this.CookieLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CookieLoginCompleted(this, new CookieLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/GetSubcontractorITPsForDownload", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetSubcontractorITPsForDownload(string sSessionId, string sUsername) {
            object[] results = this.Invoke("GetSubcontractorITPsForDownload", new object[] {
                        sSessionId,
                        sUsername});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubcontractorITPsForDownloadAsync(string sSessionId, string sUsername) {
            this.GetSubcontractorITPsForDownloadAsync(sSessionId, sUsername, null);
        }
        
        /// <remarks/>
        public void GetSubcontractorITPsForDownloadAsync(string sSessionId, string sUsername, object userState) {
            if ((this.GetSubcontractorITPsForDownloadOperationCompleted == null)) {
                this.GetSubcontractorITPsForDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubcontractorITPsForDownloadOperationCompleted);
            }
            this.InvokeAsync("GetSubcontractorITPsForDownload", new object[] {
                        sSessionId,
                        sUsername}, this.GetSubcontractorITPsForDownloadOperationCompleted, userState);
        }
        
        private void OnGetSubcontractorITPsForDownloadOperationCompleted(object arg) {
            if ((this.GetSubcontractorITPsForDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubcontractorITPsForDownloadCompleted(this, new GetSubcontractorITPsForDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/GetITPDownloadInfo", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetITPDownloadInfo(string sSessionId, string sUsername, string sID) {
            object[] results = this.Invoke("GetITPDownloadInfo", new object[] {
                        sSessionId,
                        sUsername,
                        sID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetITPDownloadInfoAsync(string sSessionId, string sUsername, string sID) {
            this.GetITPDownloadInfoAsync(sSessionId, sUsername, sID, null);
        }
        
        /// <remarks/>
        public void GetITPDownloadInfoAsync(string sSessionId, string sUsername, string sID, object userState) {
            if ((this.GetITPDownloadInfoOperationCompleted == null)) {
                this.GetITPDownloadInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetITPDownloadInfoOperationCompleted);
            }
            this.InvokeAsync("GetITPDownloadInfo", new object[] {
                        sSessionId,
                        sUsername,
                        sID}, this.GetITPDownloadInfoOperationCompleted, userState);
        }
        
        private void OnGetITPDownloadInfoOperationCompleted(object arg) {
            if ((this.GetITPDownloadInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetITPDownloadInfoCompleted(this, new GetITPDownloadInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/SetITPStatus", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] SetITPStatus(string sSessionId, string sUsername, string sID, int iStatus) {
            object[] results = this.Invoke("SetITPStatus", new object[] {
                        sSessionId,
                        sUsername,
                        sID,
                        iStatus});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void SetITPStatusAsync(string sSessionId, string sUsername, string sID, int iStatus) {
            this.SetITPStatusAsync(sSessionId, sUsername, sID, iStatus, null);
        }
        
        /// <remarks/>
        public void SetITPStatusAsync(string sSessionId, string sUsername, string sID, int iStatus, object userState) {
            if ((this.SetITPStatusOperationCompleted == null)) {
                this.SetITPStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetITPStatusOperationCompleted);
            }
            this.InvokeAsync("SetITPStatus", new object[] {
                        sSessionId,
                        sUsername,
                        sID,
                        iStatus}, this.SetITPStatusOperationCompleted, userState);
        }
        
        private void OnSetITPStatusOperationCompleted(object arg) {
            if ((this.SetITPStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetITPStatusCompleted(this, new SetITPStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/GetITPFullQuestionnaireInfo", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetITPFullQuestionnaireInfo(string sSessionId, string sUsername) {
            object[] results = this.Invoke("GetITPFullQuestionnaireInfo", new object[] {
                        sSessionId,
                        sUsername});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetITPFullQuestionnaireInfoAsync(string sSessionId, string sUsername) {
            this.GetITPFullQuestionnaireInfoAsync(sSessionId, sUsername, null);
        }
        
        /// <remarks/>
        public void GetITPFullQuestionnaireInfoAsync(string sSessionId, string sUsername, object userState) {
            if ((this.GetITPFullQuestionnaireInfoOperationCompleted == null)) {
                this.GetITPFullQuestionnaireInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetITPFullQuestionnaireInfoOperationCompleted);
            }
            this.InvokeAsync("GetITPFullQuestionnaireInfo", new object[] {
                        sSessionId,
                        sUsername}, this.GetITPFullQuestionnaireInfoOperationCompleted, userState);
        }
        
        private void OnGetITPFullQuestionnaireInfoOperationCompleted(object arg) {
            if ((this.GetITPFullQuestionnaireInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetITPFullQuestionnaireInfoCompleted(this, new GetITPFullQuestionnaireInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/GetITPFullITPTypeInfo", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetITPFullITPTypeInfo(string sSessionId, string sUsername) {
            object[] results = this.Invoke("GetITPFullITPTypeInfo", new object[] {
                        sSessionId,
                        sUsername});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetITPFullITPTypeInfoAsync(string sSessionId, string sUsername) {
            this.GetITPFullITPTypeInfoAsync(sSessionId, sUsername, null);
        }
        
        /// <remarks/>
        public void GetITPFullITPTypeInfoAsync(string sSessionId, string sUsername, object userState) {
            if ((this.GetITPFullITPTypeInfoOperationCompleted == null)) {
                this.GetITPFullITPTypeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetITPFullITPTypeInfoOperationCompleted);
            }
            this.InvokeAsync("GetITPFullITPTypeInfo", new object[] {
                        sSessionId,
                        sUsername}, this.GetITPFullITPTypeInfoOperationCompleted, userState);
        }
        
        private void OnGetITPFullITPTypeInfoOperationCompleted(object arg) {
            if ((this.GetITPFullITPTypeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetITPFullITPTypeInfoCompleted(this, new GetITPFullITPTypeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/GetITPFullDocumentSectionInfo", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetITPFullDocumentSectionInfo(string sSessionId, string sUsername) {
            object[] results = this.Invoke("GetITPFullDocumentSectionInfo", new object[] {
                        sSessionId,
                        sUsername});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetITPFullDocumentSectionInfoAsync(string sSessionId, string sUsername) {
            this.GetITPFullDocumentSectionInfoAsync(sSessionId, sUsername, null);
        }
        
        /// <remarks/>
        public void GetITPFullDocumentSectionInfoAsync(string sSessionId, string sUsername, object userState) {
            if ((this.GetITPFullDocumentSectionInfoOperationCompleted == null)) {
                this.GetITPFullDocumentSectionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetITPFullDocumentSectionInfoOperationCompleted);
            }
            this.InvokeAsync("GetITPFullDocumentSectionInfo", new object[] {
                        sSessionId,
                        sUsername}, this.GetITPFullDocumentSectionInfoOperationCompleted, userState);
        }
        
        private void OnGetITPFullDocumentSectionInfoOperationCompleted(object arg) {
            if ((this.GetITPFullDocumentSectionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetITPFullDocumentSectionInfoCompleted(this, new GetITPFullDocumentSectionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/GetITPStaticTableVersionNumber", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetITPStaticTableVersionNumber(string sSessionId, string sUsername, string sTableName) {
            object[] results = this.Invoke("GetITPStaticTableVersionNumber", new object[] {
                        sSessionId,
                        sUsername,
                        sTableName});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetITPStaticTableVersionNumberAsync(string sSessionId, string sUsername, string sTableName) {
            this.GetITPStaticTableVersionNumberAsync(sSessionId, sUsername, sTableName, null);
        }
        
        /// <remarks/>
        public void GetITPStaticTableVersionNumberAsync(string sSessionId, string sUsername, string sTableName, object userState) {
            if ((this.GetITPStaticTableVersionNumberOperationCompleted == null)) {
                this.GetITPStaticTableVersionNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetITPStaticTableVersionNumberOperationCompleted);
            }
            this.InvokeAsync("GetITPStaticTableVersionNumber", new object[] {
                        sSessionId,
                        sUsername,
                        sTableName}, this.GetITPStaticTableVersionNumberOperationCompleted, userState);
        }
        
        private void OnGetITPStaticTableVersionNumberOperationCompleted(object arg) {
            if ((this.GetITPStaticTableVersionNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetITPStaticTableVersionNumberCompleted(this, new GetITPStaticTableVersionNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/GetITPProjectQuestionnaireInfo", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetITPProjectQuestionnaireInfo(string sSessionId, string sUsername, string sId) {
            object[] results = this.Invoke("GetITPProjectQuestionnaireInfo", new object[] {
                        sSessionId,
                        sUsername,
                        sId});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetITPProjectQuestionnaireInfoAsync(string sSessionId, string sUsername, string sId) {
            this.GetITPProjectQuestionnaireInfoAsync(sSessionId, sUsername, sId, null);
        }
        
        /// <remarks/>
        public void GetITPProjectQuestionnaireInfoAsync(string sSessionId, string sUsername, string sId, object userState) {
            if ((this.GetITPProjectQuestionnaireInfoOperationCompleted == null)) {
                this.GetITPProjectQuestionnaireInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetITPProjectQuestionnaireInfoOperationCompleted);
            }
            this.InvokeAsync("GetITPProjectQuestionnaireInfo", new object[] {
                        sSessionId,
                        sUsername,
                        sId}, this.GetITPProjectQuestionnaireInfoOperationCompleted, userState);
        }
        
        private void OnGetITPProjectQuestionnaireInfoOperationCompleted(object arg) {
            if ((this.GetITPProjectQuestionnaireInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetITPProjectQuestionnaireInfoCompleted(this, new GetITPProjectQuestionnaireInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/GetITPProjectSection10Info", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetITPProjectSection10Info(string sSessionId, string sUsername, string sId) {
            object[] results = this.Invoke("GetITPProjectSection10Info", new object[] {
                        sSessionId,
                        sUsername,
                        sId});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetITPProjectSection10InfoAsync(string sSessionId, string sUsername, string sId) {
            this.GetITPProjectSection10InfoAsync(sSessionId, sUsername, sId, null);
        }
        
        /// <remarks/>
        public void GetITPProjectSection10InfoAsync(string sSessionId, string sUsername, string sId, object userState) {
            if ((this.GetITPProjectSection10InfoOperationCompleted == null)) {
                this.GetITPProjectSection10InfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetITPProjectSection10InfoOperationCompleted);
            }
            this.InvokeAsync("GetITPProjectSection10Info", new object[] {
                        sSessionId,
                        sUsername,
                        sId}, this.GetITPProjectSection10InfoOperationCompleted, userState);
        }
        
        private void OnGetITPProjectSection10InfoOperationCompleted(object arg) {
            if ((this.GetITPProjectSection10InfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetITPProjectSection10InfoCompleted(this, new GetITPProjectSection10InfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scms.silcar.com.au/SetITPUploadInfo", RequestNamespace="http://scms.silcar.com.au/", ResponseNamespace="http://scms.silcar.com.au/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] SetITPUploadInfo(string sSessionId, string sUsername, string sSendString) {
            object[] results = this.Invoke("SetITPUploadInfo", new object[] {
                        sSessionId,
                        sUsername,
                        sSendString});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void SetITPUploadInfoAsync(string sSessionId, string sUsername, string sSendString) {
            this.SetITPUploadInfoAsync(sSessionId, sUsername, sSendString, null);
        }
        
        /// <remarks/>
        public void SetITPUploadInfoAsync(string sSessionId, string sUsername, string sSendString, object userState) {
            if ((this.SetITPUploadInfoOperationCompleted == null)) {
                this.SetITPUploadInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetITPUploadInfoOperationCompleted);
            }
            this.InvokeAsync("SetITPUploadInfo", new object[] {
                        sSessionId,
                        sUsername,
                        sSendString}, this.SetITPUploadInfoOperationCompleted, userState);
        }
        
        private void OnSetITPUploadInfoOperationCompleted(object arg) {
            if ((this.SetITPUploadInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetITPUploadInfoCompleted(this, new SetITPUploadInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CookieLoginCompletedEventHandler(object sender, CookieLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CookieLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CookieLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSubcontractorITPsForDownloadCompletedEventHandler(object sender, GetSubcontractorITPsForDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubcontractorITPsForDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubcontractorITPsForDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetITPDownloadInfoCompletedEventHandler(object sender, GetITPDownloadInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetITPDownloadInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetITPDownloadInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetITPStatusCompletedEventHandler(object sender, SetITPStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetITPStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetITPStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetITPFullQuestionnaireInfoCompletedEventHandler(object sender, GetITPFullQuestionnaireInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetITPFullQuestionnaireInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetITPFullQuestionnaireInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetITPFullITPTypeInfoCompletedEventHandler(object sender, GetITPFullITPTypeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetITPFullITPTypeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetITPFullITPTypeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetITPFullDocumentSectionInfoCompletedEventHandler(object sender, GetITPFullDocumentSectionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetITPFullDocumentSectionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetITPFullDocumentSectionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetITPStaticTableVersionNumberCompletedEventHandler(object sender, GetITPStaticTableVersionNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetITPStaticTableVersionNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetITPStaticTableVersionNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetITPProjectQuestionnaireInfoCompletedEventHandler(object sender, GetITPProjectQuestionnaireInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetITPProjectQuestionnaireInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetITPProjectQuestionnaireInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetITPProjectSection10InfoCompletedEventHandler(object sender, GetITPProjectSection10InfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetITPProjectSection10InfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetITPProjectSection10InfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetITPUploadInfoCompletedEventHandler(object sender, SetITPUploadInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetITPUploadInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetITPUploadInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591